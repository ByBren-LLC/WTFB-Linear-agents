/**
 * ART Planning Response Templates for Enhanced Response System (LIN-60)
 * 
 * Specialized templates for ART planning operations with rich formatting
 * and context-aware content.
 */

import { ResponseTemplate, ResponseType } from '../types/response-types';

/**
 * ART Planning success template
 */
export const artPlanningSuccessTemplate: ResponseTemplate = {
  id: 'success_art_planning_complete',
  name: 'ART Planning Complete',
  type: ResponseType.SUCCESS,
  template: `# 🎯 ART Planning Complete ✅

**PI**: {{programIncrement}}  
**Team**: {{teamName}}  
**Iterations**: {{iterations}} planned  
**Work Items**: {{workItems}} allocated  
**Completion**: {{completionTime}}

## 📊 Key Results
- **Value Delivery Score**: {{valueDeliveryScore}}% {{valueDeliveryTrend}}
- **ART Readiness**: {{artReadiness}}% ({{readinessLabel}})
- **Capacity Utilization**: {{capacityUtilization}}% ({{utilizationLabel}})
- **Risk Level**: {{riskLevel}} {{riskIcon}}

## 🎯 Highlights
{{highlights}}

## 📋 Next Steps
{{nextSteps}}

{{section:dependencies}}

{{section:recommendations}}

{{section:links}}

---
*Generated by @saafepulse in {{executionTime}} seconds | Need help? Try \`@saafepulse help\`*`,
  variables: [
    { name: 'programIncrement', type: 'string', required: true },
    { name: 'teamName', type: 'string', required: true },
    { name: 'iterations', type: 'number', required: true },
    { name: 'workItems', type: 'number', required: true },
    { name: 'completionTime', type: 'date', required: true },
    { name: 'valueDeliveryScore', type: 'number', required: true },
    { name: 'valueDeliveryTrend', type: 'string', required: false, defaultValue: '' },
    { name: 'artReadiness', type: 'number', required: true },
    { name: 'readinessLabel', type: 'string', required: true },
    { name: 'capacityUtilization', type: 'number', required: true },
    { name: 'utilizationLabel', type: 'string', required: true },
    { name: 'riskLevel', type: 'string', required: true },
    { name: 'riskIcon', type: 'string', required: false, defaultValue: '' },
    { name: 'highlights', type: 'string', required: true },
    { name: 'nextSteps', type: 'string', required: true },
    { name: 'executionTime', type: 'number', required: true }
  ],
  sections: [
    {
      name: 'dependencies',
      condition: 'hasDependencies === true',
      template: `## 🔗 Dependencies
{{dependencies}}`
    },
    {
      name: 'recommendations',
      condition: 'hasRecommendations === true',
      template: `## 💡 Recommendations
{{recommendations}}`
    },
    {
      name: 'links',
      condition: 'hasLinks === true',
      template: `{{links}}`
    }
  ]
};

/**
 * ART Planning validation warning template
 */
export const artPlanningWarningTemplate: ResponseTemplate = {
  id: 'warning_art_planning_issues',
  name: 'ART Planning Warning',
  type: ResponseType.WARNING,
  template: `# ⚠️ ART Planning Completed with Warnings

**PI**: {{programIncrement}}  
**Status**: Planning completed but requires attention

## 🔍 Issues Detected
{{issues}}

## 📊 Planning Results
- **Value Delivery**: {{valueDeliveryScore}}% (Below target)
- **Capacity**: {{capacityUtilization}}% ({{capacityWarning}})
- **Unresolved Dependencies**: {{unresolvedCount}}
- **Risk Level**: {{riskLevel}} {{riskIcon}}

## 💡 Recommended Actions
{{recommendedActions}}

## 🚀 Quick Actions
{{quickActions}}

---
*Generated by @saafepulse | These issues should be addressed before PI kick-off*`,
  variables: [
    { name: 'programIncrement', type: 'string', required: true },
    { name: 'issues', type: 'string', required: true },
    { name: 'valueDeliveryScore', type: 'number', required: true },
    { name: 'capacityUtilization', type: 'number', required: true },
    { name: 'capacityWarning', type: 'string', required: true },
    { name: 'unresolvedCount', type: 'number', required: true },
    { name: 'riskLevel', type: 'string', required: true },
    { name: 'riskIcon', type: 'string', required: false },
    { name: 'recommendedActions', type: 'string', required: true },
    { name: 'quickActions', type: 'string', required: true }
  ]
};

/**
 * ART Planning optimization template
 */
export const artOptimizationTemplate: ResponseTemplate = {
  id: 'report_art_optimization',
  name: 'ART Optimization Report',
  type: ResponseType.REPORT,
  template: `# 📈 ART Planning Optimization Report

**PI**: {{programIncrement}}  
**Optimization Run**: {{timestamp}}

## 🎯 Optimization Results
{{optimizationSummary}}

## 📊 Before vs After
| Metric | Before | After | Improvement |
|--------|--------|-------|-------------|
| Value Delivery | {{beforeValue}}% | {{afterValue}}% | {{valueImprovement}} |
| Capacity Utilization | {{beforeCapacity}}% | {{afterCapacity}}% | {{capacityImprovement}} |
| Risk Score | {{beforeRisk}} | {{afterRisk}} | {{riskImprovement}} |
| Dependencies | {{beforeDeps}} | {{afterDeps}} | {{depsImprovement}} |

## 🔄 Changes Made
{{changesSummary}}

## 💡 Additional Opportunities
{{additionalOpportunities}}

## 📋 Implementation Steps
{{implementationSteps}}

---
*Optimization analysis by @saafepulse | Apply changes: \`@saafepulse apply optimization\`*`,
  variables: [
    { name: 'programIncrement', type: 'string', required: true },
    { name: 'timestamp', type: 'date', required: true },
    { name: 'optimizationSummary', type: 'string', required: true },
    { name: 'beforeValue', type: 'number', required: true },
    { name: 'afterValue', type: 'number', required: true },
    { name: 'valueImprovement', type: 'string', required: true },
    { name: 'beforeCapacity', type: 'number', required: true },
    { name: 'afterCapacity', type: 'number', required: true },
    { name: 'capacityImprovement', type: 'string', required: true },
    { name: 'beforeRisk', type: 'string', required: true },
    { name: 'afterRisk', type: 'string', required: true },
    { name: 'riskImprovement', type: 'string', required: true },
    { name: 'beforeDeps', type: 'number', required: true },
    { name: 'afterDeps', type: 'number', required: true },
    { name: 'depsImprovement', type: 'string', required: true },
    { name: 'changesSummary', type: 'string', required: true },
    { name: 'additionalOpportunities', type: 'string', required: true },
    { name: 'implementationSteps', type: 'string', required: true }
  ]
};

/**
 * ART Health check template
 */
export const artHealthCheckTemplate: ResponseTemplate = {
  id: 'report_art_health',
  name: 'ART Health Check',
  type: ResponseType.REPORT,
  template: `# 🏥 ART Health Check Report

**Team**: {{teamName}}  
**Assessment Date**: {{assessmentDate}}  
**Overall Health**: {{overallHealth}} {{healthIcon}}

## 📊 Health Metrics
{{healthMetrics}}

## 🎯 Strengths
{{strengths}}

## ⚠️ Areas for Improvement
{{improvements}}

## 📈 Trend Analysis
{{trendAnalysis}}

## 💡 Recommendations
{{recommendations}}

## 🚀 Action Items
{{actionItems}}

---
*ART health assessment by @saafepulse | Schedule follow-up: \`@saafepulse schedule health review\`*`,
  variables: [
    { name: 'teamName', type: 'string', required: true },
    { name: 'assessmentDate', type: 'date', required: true },
    { name: 'overallHealth', type: 'string', required: true },
    { name: 'healthIcon', type: 'string', required: true },
    { name: 'healthMetrics', type: 'string', required: true },
    { name: 'strengths', type: 'string', required: true },
    { name: 'improvements', type: 'string', required: true },
    { name: 'trendAnalysis', type: 'string', required: true },
    { name: 'recommendations', type: 'string', required: true },
    { name: 'actionItems', type: 'string', required: true }
  ]
};

/**
 * Register all ART planning templates
 */
export function registerARTPlanningTemplates(engine: any): void {
  engine.registerTemplate(artPlanningSuccessTemplate);
  engine.registerTemplate(artPlanningWarningTemplate);
  engine.registerTemplate(artOptimizationTemplate);
  engine.registerTemplate(artHealthCheckTemplate);
}